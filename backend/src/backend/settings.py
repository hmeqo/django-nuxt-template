"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from django.utils.translation import gettext_lazy as _

from project.dirs import app_base_dir, app_data_dir
from project.settings import db_settings, django_settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent.parent
BASE_DIR = app_base_dir

DIST_DIR = BASE_DIR.joinpath("..", "frontend", ".output", "public").resolve()

RESOURCES_DIR = BASE_DIR / "resources"

ASSETS_DIR = RESOURCES_DIR / "assets"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-0$(n^h270d#qbmgy%$08iaka57y*=ci1t=nta4$cr5t)$nt5c3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = django_settings.debug

ALLOWED_HOSTS = ["*"]

INTERNAL_IPS = ["127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    "simpleui",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "whitenoise.runserver_nostatic",
    "django.contrib.staticfiles",
    "rest_framework",
    "drf_spectacular",
    "dbbackup",
    "django_unused_media",
    "apps.chore",
    "apps.main",
    "django_cleanup.apps.CleanupConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [ASSETS_DIR],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": app_data_dir / db_settings.sqlite_file,
    }
    if db_settings.engine.endswith("sqlite3")
    else {
        "ENGINE": db_settings.engine
        if db_settings.engine.startswith("django.db.backends")
        else f"django.db.backends.{db_settings.engine}",
        "NAME": db_settings.name,
        "USER": db_settings.user,
        "PASSWORD": db_settings.password,
        "HOST": db_settings.host,
        "PORT": str(db_settings.port),
    },
}

if db_settings.use_cache:
    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://localhost:6379/1",
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient",
            },
        }
    }

STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
    "django.contrib.auth.hashers.ScryptPasswordHasher",
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"
# LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "UTC"
# TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [
    BASE_DIR / "src" / "backend" / "locale",
]

LANGUAGES = (
    ("en-US", _("English")),
    ("zh-Hans", _("Chinese (simplified)")),
)

LANGUAGE_COOKIE_NAME = "language"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = ASSETS_DIR / "static"

STATICFILES_DIRS = []


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "main.User"


# Media

MEDIA_URL = "media/"

MEDIA_ROOT = app_data_dir / "media"


# Session

SESSION_ENGINE = "django.contrib.sessions.backends.cache"

if db_settings.use_cache:
    SESSION_CACHE_ALIAS = "default"


# Csrf

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
]


# Django rest framework

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        *(["rest_framework.renderers.BrowsableAPIRenderer"] if DEBUG else []),
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}


# drf-spectacular

SPECTACULAR_SETTINGS = {
    "TITLE": "",
    "DESCRIPTION": "",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "SCHEMA_PATH_PREFIX": "/api",
    "SERVE_PERMISSIONS": ["rest_framework.permissions.IsAdminUser"],
    "ENUM_NAME_OVERRIDES": {
        "UserRole": "apps.main.choices.UserRole",
    },
}


# dbbackup

DBBACKUP_STORAGE = "django.core.files.storage.FileSystemStorage"
DBBACKUP_STORAGE_OPTIONS = {"location": app_data_dir / "backups"}
DBBACKUP_CLEANUP_KEEP = 10
DBBACKUP_CLEANUP_KEEP_MEDIA = 10


# Whitenoise

WHITENOISE_GZIP = True

# WHITENOISE_MIMETYPES = {
#     ".js": "application/text; charset=utf-8",
# }


# Login

LOGIN_URL = "/login"
